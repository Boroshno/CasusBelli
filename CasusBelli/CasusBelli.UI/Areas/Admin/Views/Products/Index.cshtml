@using System.CodeDom
@using CasusBelli.Domain.Entities
@using Microsoft.Ajax.Utilities
@model List<CasusBelli.UI.Models.AdminProductsListViewModel>

@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Admin/Views/_AdminLayout.cshtml";
}

<h1>Products</h1>

<p>
    @Html.ActionLink("Add new product", "CreateProduct")
</p>


@foreach (var type in Model.GroupBy(x => x.TypeName).Select(grp => new { GroupList = grp.ToList(), GroupKey = grp.Key }))
{
    <h2>@type.GroupKey</h2>
    foreach (var subtype in type.GroupList.GroupBy(x => x.SubTypeName).Select(grp => new { GroupKey = grp.Key, GroupList = grp.ToList() }))
    {
        <h3>@subtype.GroupKey</h3>

        <table border="1" class="tablesorter">
            <tr>
                <th>
                    Type
                </th>
                <th>
                    SubType
                </th>
                <th>
                    Country
                </th>
                <th>
                    Size
                </th>
                <th>
                    NATO size
                </th>
                <th>
                    Count
                </th>
                <th>
                    Additional info
                </th>
                <th>
                    Trade price
                </th>
                <th>
                    Price
                </th>
                <th>
                    Status
                </th>
                <th></th>
                <th></th>
                <th></th>
            </tr>

            @foreach (var products in subtype.GroupList.GroupBy(x => new { x.Size, x.NATOSize, x.Price, x.CountryId, x.AdditionalInfo, x.Condition, x.StatusId, x.TradePrice, x.SoldPrice }).Select(grp => new { GroupKey = grp.Key, GroupList = grp.ToList() }))
            {
                <tr @{if (products.GroupList.First().StatusId == (int)ProductStatusEnum.Sold)
                      { <text> style="background-color: red;" </text>  } else if (products.GroupList.First().StatusId == (int)ProductStatusEnum.Reserved) { <text> style="background-color: yellow;" </text> }}>
                    <td>
                        @Html.DisplayFor(modelItem => products.GroupList.First().TypeName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => products.GroupList.First().SubTypeName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => products.GroupList.First().CountryName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => products.GroupList.First().Size)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => products.GroupList.First().NATOSize)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => products.GroupList.Count)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => products.GroupList.First().AdditionalInfo)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => products.GroupList.First().TradePrice)
                    </td>
                    <td>

                        @{
                if (products.GroupList.First().StatusId == 3)
                {
                    @Html.DisplayFor(modelItem => products.GroupList.First().SoldPrice);
                }
                else
                {
                    @Html.DisplayFor(modelItem => products.GroupList.First().Price);
                }
                        }
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => products.GroupList.First().StatusName)
                    </td>
                    <td>
                        @{if (products.GroupList.First().StatusId != 3)
                        {<text>
                            <a class="soldbtn" itemid="@products.GroupList.First().ProductId">Sold</a>
                        </text>}}
                    </td>
                    <td>
                        @Html.ActionLink("Delete", "DeleteProduct", new { id = products.GroupList.First().ProductId })
                    </td>
                    <td>
                        Reserve
                    </td>
                </tr>
            }

        </table>
    }
}

<div id="solddialog" title="Sold panel" class="modal-dialog">
    <form action="/Admin/SoldProduct" method="POST">
        <input type="hidden" name="productid" value="" id="productid" />
        Sold price <br />
        <input type="text" name="price" /> <br />
        Sold count <br />
        <input type="text" name="count" /><br />
        <div class="editor-label"><label for="ClientName">ClientName</label></div>
        <div class="editor-field">
            @Html.DropDownListFor(modelItem => Model.First().ClientId, new SelectList(Model.First().availableclients, "ClientId", "Name", -1))
        </div>
        <text><a class="createbtn">Create new</a></text><br /><br />
        <button>Sold</button>
    </form>
</div>

<div id="createdialog" title="Create client" class="modal-dialog">

</div>

<script type="text/jscript">
    $('.createclientpost').click(function () {
        alert('sdf');
    })

    $('.soldbtn').click(function () {
        $("#solddialog").dialog("open");
        $('#productid').val($(this).attr("itemid"));
    });

    $('.createbtn').click(function () {
        $("#createdialog").dialog({
            title: 'Client',
            modal: true,
            open: function(event, ui) {
                //Load the CreateAlbumPartial action which will return
                // the partial view _CreateAlbumPartial
                $(this).load("@Url.Action("ClientEditPartial")");
            },
            buttons: {
                "AddOrEdit": function () {
                    var url = "/Admin/CreateClient";
                    var name = $("#Name").val();
                    var phone = $("#Phone").val();
                    var email = $('#Email').val();
                    var city = $('#City').val();
                    var npoffice = $('#NPOffce').val();
                    var additionalInfo = $('#AddiotionalInfo').val();
                    $.get(url, { name: name, phone: phone, email: email, city: city, NPOffice: npoffice, additionalInfo: additionalInfo }, function (data) {
                        $("#msg").html(data);
                    });
                    $(this).dialog("close");
                }
            }
        });

        $("#createdialog").dialog("open");
    });
</script>
