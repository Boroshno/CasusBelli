@model CasusBelli.UI.Models.ProductsViewModel

@{
    ViewBag.Title = "CreateProduct";
    Layout = "~/Areas/Admin/Views/_AdminLayout.cshtml";
}

<h2>CreateProduct</h2>
<h3 class="status" style="color:red;">@Model.Status</h3>

@using (Html.BeginForm("CreateProduct", "Products", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <div class="editor-label"><label for="TypeName">TypeName</label></div>
        <div class="editor-field">
            @Html.DropDownListFor(modelItem => Model.TypeId, new SelectList(Model.AvailableTypes, "TypeId", "TypeName"))
        </div>
        
        <div class="editor-label"><label for="SubTypeName">SubTypeName</label></div>
        <div class="editor-field">
            @Html.DropDownListFor(modelItem => Model.SubTypeId, new SelectList(Model.AvailableSubTypes, "SubTypeId", "SubTypeName"))
        </div>

        <div class="editor-label"><label for="CountryName">CountryName</label></div>
        <div class="editor-field">
            @Html.DropDownListFor(modelItem => Model.CountryId, new SelectList(Model.AvailableCountries, "CountryId", "CountryName"))
        </div>
        
        <div class="editor-label">
            @Html.LabelFor(model => model.Size)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Size)
            @Html.ValidationMessageFor(model => model.Size)
        </div>
        
        <div class="editor-label">
            @Html.LabelFor(model => model.NATOSize)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.NATOSize)
            @Html.ValidationMessageFor(model => model.NATOSize)
        </div>
        
        <div class="editor-label">
            @Html.LabelFor(model => model.Count)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Count)
            @Html.ValidationMessageFor(model => model.Count)
        </div>
        
        <div class="editor-label">
            @Html.LabelFor(model => model.AdditionalInfo)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.AdditionalInfo)
            @Html.ValidationMessageFor(model => model.AdditionalInfo)
        </div>
        
        <div class="editor-label">
            @Html.LabelFor(model => model.TradePrice)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.TradePrice)
            @Html.ValidationMessageFor(model => model.TradePrice)
        </div>
        
        <div class="editor-label">
            @Html.LabelFor(model => model.Price)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Price)
            @Html.ValidationMessageFor(model => model.Price)
        </div>

        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
